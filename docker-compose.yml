services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: epg-merge-backend
    ports:
      - "9193:9193"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    volumes:
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
    networks:
      - epg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9193/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    restart: unless-stopped
    labels:
      - "com.epg-merge.service=backend"

  # Frontend Web Service
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        REACT_APP_API_BASE: http://backend:9193
    container_name: epg-merge-frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_BASE=http://backend:9193
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - epg-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    labels:
      - "com.epg-merge.service=frontend"

networks:
  epg-network:
    driver: bridge

volumes:
  backend-data:
    driver: local
  backend-logs:
    driver: local